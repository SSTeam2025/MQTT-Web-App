name: CI

on:
  push:
    branches: [ "cicd" ]
  pull_request:
    branches: [ "cicd" ]

jobs:
   unit-test:
    runs-on: windows-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission to Gradle
        run: chmod +x ./mobile/gradlew

      - name: Run tests
        working-directory: mobile
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_report
          path: mobile/app/build/reports/tests/testDebugUnitTest
          
   static-code-analysis:
      name: Build and analyze
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: 17
            distribution: 'zulu'
        - name: Cache SonarQube packages
          uses: actions/cache@v4
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Gradle packages
          uses: actions/cache@v4
          with:
            path: ~/.gradle/caches
            key: ${{ runner.os }}-gradle-${{ hashFiles('mobile/**/*.gradle') }}
            restore-keys: ${{ runner.os }}-gradle                                                                                                                                      # Uses hashFiles to watch only Gradle files under mobile/ :contentReference[oaicite:0]{index=0}
        - name: Build and analyze
          working-directory: mobile                                                                                                                                                # Run this step from mobile/ :contentReference[oaicite:1]{index=1}  
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: ./gradlew build sonar --info
